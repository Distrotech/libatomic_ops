{"name":"Libatomic ops","tagline":"The atomic_ops project (Atomic memory update operations portable implementation)","body":"== Synopsis ==\r\n\r\nThis package provides semi-portable access to hardware provided\r\natomic memory operations.  These might allow you to write code:\r\n\r\n- That does more interesting things in signal handlers.\r\n- Makes more effective use of multiprocessors by allowing you to write\r\n  clever lock-free code.  Note that such code is very difficult to get\r\n  right, and will unavoidably be less portable than lock-based code.  It\r\n  is also not always faster than lock-based code.  But it may occasionally\r\n  be a large performance win.\r\n- To experiment with new and much better thread programming paradigms, etc.\r\n\r\nFor details and licensing restrictions see the files in the doc\r\nsubdirectory.\r\n\r\nThis is version 7.3alpha3 of libatomic_ops.\r\n\r\nYou might find a more recent version of this at\r\n\r\nhttp://www.hpl.hp.com/personal/Hans_Boehm/gc\r\n\r\nor\r\n\r\nhttp://www.hpl.hp.com/research/linux/atomic_ops/\r\n\r\nPlease address bug reports to gc@linux.hpl.hp.com\r\n\r\n\r\n== Installation and Usage ==\r\n\r\nThe configuration and build scripts for this package were generated by\r\nAutomake/Autoconf.  \"./configure --prefix=<install dir>; make; make install\"\r\nin this directory should work.  For a more customized build, see \"INSTALL\"\r\nand the output of \"./configure --help\".\r\n\r\nNote that much of the content of this library is in the header files.\r\nHowever, two small libraries are built and installed:\r\n\r\n- libatomic_ops.a is a support library, which is not needed on some platforms.\r\n  This is intended to be usable, under some mild restrictions, in free or\r\n  proprietary code, as are all the header files.  See doc/LICENSING.txt.\r\n- libatomic_ops_gpl.a contains some higher level facilities.  This code is\r\n  currently covered by the GPL.  The contents currently correspond to\r\n  the headers atomic_ops_stack.h and atomic_ops_malloc.h.\r\n\r\n\r\n== Platform Specific Notes ==\r\n\r\nWin32/64: src/Makefile.msft contains a very simple Makefile for building\r\nand running tests and building the gpl library.  The core atomic_ops\r\nimplementation is entirely in header files.\r\n\r\nHP-UX/PA-RISC: aCC -Ae won't work as a C compiler, since it doesn't support\r\ninline assembly code.  Use cc.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}